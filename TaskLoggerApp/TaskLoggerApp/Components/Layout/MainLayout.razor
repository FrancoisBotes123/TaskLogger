@using Microsoft.AspNetCore.Components.Authorization
@inherits LayoutComponentBase
@inject AuthenticationStateProvider AuthenticationStateProvider

<div>
    @if (authenticationState.User.Identity.IsAuthenticated)
    {
        <div class="page">

            <div class="sidebar">
                <NavMenu />
            </div>

            <main>
                <div class="top-row px-4">
                    <a href="https://learn.microsoft.com/aspnet/core/" target="_blank">About</a>
                </div>

                <article class="content px-4">
                    @Body
                </article>
            </main>


        </div>
    }
    else
    {

        <RedirectToLogin />


    }
</div>

<div id="blazor-error-ui">
    An unhandled error has occurred.
    <a href="" class="reload">Reload</a>
    <a class="dismiss">🗙</a>
</div>


@code{
    private bool loggedIn = false; 
    private AuthenticationState authenticationState;

    protected override async Task OnInitializedAsync()
    {
        authenticationState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
    }

    private async Task HandleAuthenticationChanged(bool isAuthenticated)
    {
        loggedIn = isAuthenticated;
        await InvokeAsync(StateHasChanged);
    }

}

